{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/fazt/app-react-localstorage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const [variable, funcion que me permite actualizar la variable] = useState()\n  // entonces para llenar esta variable usamos la funcion setnewTaskName(ver onChange)\n  const [newTaskName, setnewTaskName] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a new task\",\n      onChange: e => {\n        // cuando el usuario tipee el valor lo guardare en una variable para usarlo despues llamando onChange\n        // asi capturo lo que se escribe en este input pero aun no lo guardo para ello lo tengo que guardar en un estado\n        // (viene de 7)entonces aca  a medoda que tipees llenaras la variable con la funcion setnewtaskname\n        setnewTaskName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        //capturando el evento click que me sirve para cuando el usuario haga click yo vea el valor del input\n        alert(\"clicked\");\n      },\n      children: \"Save task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wKuiyLw9dE8yaSZ+ok8eiDVbmkc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","newTaskName","setnewTaskName","e","target","value","alert"],"sources":["/Users/viviana/Desktop/ejercicios/fazt/app-react-localstorage/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  //const [variable, funcion que me permite actualizar la variable] = useState()\n  // entonces para llenar esta variable usamos la funcion setnewTaskName(ver onChange)\n  const [newTaskName, setnewTaskName] = useState()\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter a new task\"\n        onChange={(e) => { // cuando el usuario tipee el valor lo guardare en una variable para usarlo despues llamando onChange\n          // asi capturo lo que se escribe en este input pero aun no lo guardo para ello lo tengo que guardar en un estado\n          // (viene de 7)entonces aca  a medoda que tipees llenaras la variable con la funcion setnewtaskname\n          setnewTaskName(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => { //capturando el evento click que me sirve para cuando el usuario haga click yo vea el valor del input\n          alert(\"clicked\");\n        }}\n      >\n        Save task\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,EAA9C;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,kBAFd;MAGE,QAAQ,EAAGI,CAAD,IAAO;QAAE;QACjB;QACA;QACAD,cAAc,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;MACD;IAPH;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MACE,OAAO,EAAE,MAAM;QAAE;QACfC,KAAK,CAAC,SAAD,CAAL;MACD,CAHH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAzBQN,G;;KAAAA,G;AA2BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}