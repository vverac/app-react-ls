{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/fazt/app-react-localstorage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasksItem, setTasksItem] = useState([]); //ahora iniciara vacio y haremos otro useeffect al quqe le diremos que cuando cargue la aplicacion haga algo\n\n  function createNewTask(taskName) {\n    if (!tasksItem.find(task => task.name === taskName)) {\n      setTasksItem([...tasksItem, {\n        name: taskName,\n        done: false\n      }]);\n    }\n  }\n\n  useEffect(() => {\n    console.log('cargo');\n  }, []); // si aca nuestro esta vacio se ejecutara apenas la aplicacion cargue\n\n  useEffect(() => {\n    //console.log('cambioc') //aca es donde guardaremos en el localstorage\n    // entonces diremos cuando cuambie el tasksItems vamos a guardarlo(setItem con el nombre tareas) en el localstorage  y el valor de esto sera\n    // el arreglo taskItem. y lo convertimos en string(ya que es un arreglo de js)\n    localStorage.setItem('task', JSON.stringify(tasksItem));\n  }, [tasksItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TaskCreator, {\n      createNewTask: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tareas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasksItem.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, task.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vby2qen3zMr0CBh+5XLMailVqUM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TaskCreator","App","tasksItem","setTasksItem","createNewTask","taskName","find","task","name","done","console","log","localStorage","setItem","JSON","stringify","map"],"sources":["/Users/viviana/Desktop/ejercicios/fazt/app-react-localstorage/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TaskCreator from \"./components/TaskCreator\";\n\nfunction App() {\n  const [tasksItem, setTasksItem] = useState([])//ahora iniciara vacio y haremos otro useeffect al quqe le diremos que cuando cargue la aplicacion haga algo\n\n  function createNewTask(taskName) {\n    if (!tasksItem.find(task => task.name === taskName)) {\n      setTasksItem([...tasksItem, { name: taskName, done: false }])\n    }\n  }\n\n  useEffect(() => {\n    console.log('cargo')\n  }, [])// si aca nuestro esta vacio se ejecutara apenas la aplicacion cargue\n\n\n  useEffect(() => {\n    //console.log('cambioc') //aca es donde guardaremos en el localstorage\n    // entonces diremos cuando cuambie el tasksItems vamos a guardarlo(setItem con el nombre tareas) en el localstorage  y el valor de esto sera\n    // el arreglo taskItem. y lo convertimos en string(ya que es un arreglo de js)\n    localStorage.setItem('task', JSON.stringify(tasksItem))\n  }, [tasksItem])\n\n  return (\n    <div className=\"App\">\n      <TaskCreator createNewTask={createNewTask} />\n      <table>\n        <thead>\n          <tr>\n            <th>Tareas</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            tasksItem.map(task => (\n              <tr key={task.name}>\n                <td>{task.name}</td>\n              </tr>\n            ))\n          }\n          {/* pero como a√±ado una nueva tarea a esta lista? */}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C,CADa,CACiC;;EAE9C,SAASK,aAAT,CAAuBC,QAAvB,EAAiC;IAC/B,IAAI,CAACH,SAAS,CAACI,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcH,QAArC,CAAL,EAAqD;MACnDF,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe;QAAEM,IAAI,EAAEH,QAAR;QAAkBI,IAAI,EAAE;MAAxB,CAAf,CAAD,CAAZ;IACD;EACF;;EAEDX,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CAFQ,EAEN,EAFM,CAAT,CATa,CAWP;;EAGNb,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAc,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,SAAf,CAA7B;EACD,CALQ,EAKN,CAACA,SAAD,CALM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,WAAD;MAAa,aAAa,EAAEE;IAA5B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE;QAAA,uBACE;UAAA,uBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAA,UAEIF,SAAS,CAACc,GAAV,CAAcT,IAAI,iBAChB;UAAA,uBACE;YAAA,UAAKA,IAAI,CAACC;UAAV;YAAA;YAAA;YAAA;UAAA;QADF,GAASD,IAAI,CAACC,IAAd;UAAA;UAAA;UAAA;QAAA,QADF;MAFJ;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA3CQP,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}